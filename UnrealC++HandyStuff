I like: Making C++ classes, coding all the behavior there. Then creating blueprints that edit defaults only.

Check if actor mesh is of specific type
for(UActorComponent  i : OtherActor->GetComponentsByClass(UStaticMeshComponent::StaticClass()) {
 
        if(((UStaticMeshComponent*) i)->StaticMesh->GetPathName().Equals("/Game/FirstPerson/Meshes
        /FirstPersonTemplateCube.FirstPersonTemplateCube"))... *Dont forget continue;
 }

Don't forget about UGameplayStatics

Vector math support operator overloading :)

Apply velocity to an actor that Actor->IsRootComponentMovable && Actor->GetRootComponent()->IsSimulatingPhysics
Actor->GetRootPrimitiveComponent()->SetPhysicsLinearVelocity(velocity, false);

The generated header file include should be the last include
